@use '../../abstracts/' as *;

.form {
	font-size: 1rem;
	min-height: 100vh;
	background: var(--bg-color2);

	&__wrapper {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 4rem;
		padding: 7rem 0 5rem;
	}

	&__title {
		align-self: flex-start;
		width: 100%;
		padding: 1.5rem 0;
		border-bottom: 1px solid var(--gray-light);

		h2 {
			color: var(--text-color2);
			font-weight: 600;
			font-size: 2em;
			letter-spacing: 1.5px;
			margin-bottom: 1rem;
		}

		p {
			color: var(--text-color);
		}
	}

	&__content {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		gap: 6rem;
		width: 80%;

		@include breakpointDesktop(991px) {
			width: 100%;
		}
	}

	&__info {
		text-align: center;

		&-contacts {
			margin: 2rem 0;
			display: flex;
			align-items: center;
			gap: 2rem;

			@include breakpointDesktop(768px) {
				flex-direction: column;
			}

			&-card {
				position: relative;
				padding: 1rem;
				width: 250px;
				height: 150px;
				border-radius: 15px;
				transition: 0.3s;

				@include breakpointDesktop(991px) {
					width: 50%;
				}

				@include breakpointDesktop(768px) {
					width: 100%;
				}

				&::after {
					content: '';
					opacity: 0;
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					border-radius: 50%;
					filter: blur(60px);
					background: var(--green-dark);
					transition: 0.3s;
				}

				&:hover {
					transform: translateY(-10px);

					@include breakpointDesktop(991px) {
						transform: none;
					}

					&::after {
						opacity: 1;

						@include breakpointDesktop(991px) {
							opacity: 0;
						}
					}

					svg {
						color: var(--color-main);
					}

					strong {
						color: var(--text-color2);
					}
				}

				div {
					position: relative;
					display: flex;
					flex-direction: column;
					align-items: center;
					justify-content: center;
					gap: 0.5rem;
					background: transparent;
					z-index: 50;
				}

				svg {
					color: var(--green-dark);
					font-size: 2em;
					transition: 0.3s;
				}

				strong {
					color: var(--text-color);
					font-size: 1.1em;
					letter-spacing: 1.5px;
					transition: 0.3s;
				}

				p {
					color: var(--text-color2);
				}
			}
		}
	}

	form {
		position: relative;
		padding: 2rem;
		display: flex;
		flex-direction: column;
		width: 70%;
		border-radius: 20px;
		background: rgba(255, 255, 255, 0.05);
		backdrop-filter: blur(1px);

		&::after {
			content: '';
			position: absolute;
			top: 5%;
			left: 5%;
			width: 90%;
			height: 90%;
			background: rgba(145, 235, 150, 0.171);
			z-index: -1;
			filter: blur(100px);
		}

		@include breakpointDesktop(768px) {
			width: 100%;
		}

		.form__content-group {
			display: flex;
			align-items: center;
			gap: 2rem;

			@include breakpointDesktop(1060px) {
				flex-direction: column;
				gap: 0;
			}

			div {
				width: 50%;
				display: flex;
				flex-direction: column;

				@include breakpointDesktop(1060px) {
					width: 100%;
				}
			}
		}

		h4 {
			color: var(--text-color2);
			font-weight: 500;
			font-size: 1.5em;
			letter-spacing: 1.5px;
			text-align: center;
			margin-bottom: 2rem;
		}

		label {
			color: var(--text-color2);
			margin-bottom: 1rem;
		}

		label[for='message'] {
			margin-top: 2rem;
			text-align: center;
			font-size: 1.1em;

			@include breakpointDesktop(1060px) {
				margin-top: 1rem;
			}
		}

		input {
			padding: 1rem;
			border: 1px solid #414141;
			border-radius: 8px;
			background: rgba(0, 0, 0, 0.521);
			color: var(--text-color2);
			outline: none;
			transition: 0.25s;

			&::placeholder {
				color: var(--gray-light);
			}

			&:focus {
				box-shadow: 0 0 10px rgba(255, 255, 255, 0.322);
			}

			&::-webkit-outer-spin-button,
			&::-webkit-inner-spin-button {
				-webkit-appearance: none;
			}
		}

		input[type='number'] {
			-webkit-appearance: none;
			-moz-appearance: none;
			appearance: none;
		}

		p {
			margin: 0.5rem 0 1.5rem;
			color: rgb(216, 113, 113);
			font-weight: 600;
		}

		textarea {
			padding: 1rem;
			height: 200px;
			border: 1px solid #414141;
			border-radius: 8px;
			background: rgba(0, 0, 0, 0.521);
			color: var(--text-color2);
			font-size: 1em;
			font-family: 'Lato', sans-serif;
			line-height: 1.5;
			outline: none;
			transition: 0.25s;
			resize: none;

			&:focus {
				border: 1px solid var(--text-color);
			}
		}

		button {
			margin-top: 2rem;
		}
	}

	&__submittedData {
		opacity: 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		position: fixed;
		top: 0;
		right: 20px;
		z-index: 99999;
		margin-top: 2rem;
		padding: 1.5rem;
		text-align: center;
		background: var(--bg-color3);
		/* border-bottom: 2px solid var(--green-dark); */
		border-radius: 10px;
		transition: 0.25s;
		overflow: hidden;

		&::before {
			content: '';
			position: absolute;
			bottom: 0;
			left: 0;
			height: 5px;
			width: 100%;
			background: var(--green-dark);
			z-index: -1;
		}

		&.show {
			opacity: 1;
			animation: show_toast 2000ms ease forwards;
		}

		&.hide {
			opacity: 0;
			animation: hide_toast 1000ms ease forwards;
		}

		div {
			width: 100%;
			display: flex;
			align-items: flex-start;
			justify-content: center;
			margin-bottom: 1rem;

			span {
				display: flex;
				align-items: center;
				justify-content: center;
				width: 10%;
				color: #ffffff;
				padding: 0.5rem;
				border-radius: 50%;
				background: var(--green-dark);
				margin-bottom: 1rem;
				margin: auto;
			}

			button {
				color: var(--text-color2);
				font-size: 1.1em;
				transition: 0.25s;

				&:hover {
					color: var(--text-color);
					text-decoration: none;
				}
			}
		}

		h2 {
			color: var(--green-dark);
			font-weight: 600;
			font-size: 1.1em;
			letter-spacing: 1.5px;
			margin-bottom: 1rem;
		}

		p {
			color: var(--text-color2);
			margin-bottom: 1rem;
		}

		button {
			background: transparent;
			border: none;
			color: var(--text-color);
			outline: none;
			cursor: pointer;

			&:hover {
				text-decoration: underline;
			}
		}
	}

	@keyframes show_toast {
		0% {
			transform: translateX(100%);
		}
		50% {
			transform: translateX(-5%);
		}
		100% {
			transform: translateX(0%);
		}
	}

	@keyframes hide_toast {
		0% {
			transform: translateX(0%);
		}

		100% {
			transform: translateX(150%);
		}
	}
}
